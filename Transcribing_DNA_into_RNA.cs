using System;
using Xunit;

namespace Rosalind_CSharp
{
    public class Transcribing_DNA_into_RNA
    {
        [Fact]
        public void SampleData()
        {
            var actualResult = Transcribe("GATGGAACTTGACTACGTAAATT");
            Assert.Equal("GAUGGAACUUGACUACGUAAAUU", actualResult);
        }

        [Fact]
        public void ActualData()
        {
            var expectedResult = "GGGUCGGCCCUCCCAAAACCAAAAACAACGUCGGGCCGAAUAUGCAGAUACUACUCGAAAUUGAGAAGGGUCGCCUGCUGUAGUUCUUCUUCUUCCCGUCUGAUGUUGCUUUGUAAUUAUUUUAGCCCAUUGGACAGCACACCGGCUCUUUCAUGGUUGGGACUUAUGCGAGACUCCUUCAGUCGGGGUACUUUGGUAUCAGAUCGCGUUCAACCCCAGGGUAGUUAAGUAUAACGACAAUCAUAAUAGCCCAAAUGAAUAAAACCGAGAUCUCGACCAACCGCAGCCAACGAUAGUGUUUGUGCAUCAGUUCUGGCAGUGCCGCGGGCACCGCGAACGUACCUAAGUGCAGACGGCGGGGAAGGUGAUUCUAAGAGCGAAAAAGAAGGGAGUACUGAUGAAUUCGGCUGACGCGCUGUCAAAUAGGCGUACCACAAGAGGGAUUCCGCACGAAGGUAUUUAAAAGGUCUUUAUUCGUCCCGAACGAAUAGCCUGGUUUAGACAACUUUGACGCAAAAUCCAAUAUUAGCCUCCCAUUAGGGGUAAAUUCAAGUCGAUAUCGGUCGCAGGCUUUACGGCAAGUUUUACUUUCUAAAUGGUUUCGGUGGUAAUUAACUAUCGAACAGGCUUGUCAAAUCUGUAACUCUCCACGCCUUAUAUUUACGACUAACGCCUUGAUUGGAACUAGAUCAAUCAAUUUUGGGUGAACAGAAUAGAGUUGGUCCUGCGACUGGGACAAGCCCAUUAUCAUUAAAACAUUAUGACGUCUUUCAGUUGAUUUGCAGGGAGGUAUGAACCUCCGCUGGGGAAUUUCUAAUGAGUGAGUCGAGUGUGCUGGGAUGCAACCGUCACAGGUCCUUAGAAUCCGCGUACAAAAUUCUUGACGGAUAUGUCAUUCUCCACUAAUCCUCCAACAGAACCGUAUGAAGUCGCAAUUCCGUAUCCGAUCAGU";
            var actualResult = Transcribe("GGGTCGGCCCTCCCAAAACCAAAAACAACGTCGGGCCGAATATGCAGATACTACTCGAAATTGAGAAGGGTCGCCTGCTGTAGTTCTTCTTCTTCCCGTCTGATGTTGCTTTGTAATTATTTTAGCCCATTGGACAGCACACCGGCTCTTTCATGGTTGGGACTTATGCGAGACTCCTTCAGTCGGGGTACTTTGGTATCAGATCGCGTTCAACCCCAGGGTAGTTAAGTATAACGACAATCATAATAGCCCAAATGAATAAAACCGAGATCTCGACCAACCGCAGCCAACGATAGTGTTTGTGCATCAGTTCTGGCAGTGCCGCGGGCACCGCGAACGTACCTAAGTGCAGACGGCGGGGAAGGTGATTCTAAGAGCGAAAAAGAAGGGAGTACTGATGAATTCGGCTGACGCGCTGTCAAATAGGCGTACCACAAGAGGGATTCCGCACGAAGGTATTTAAAAGGTCTTTATTCGTCCCGAACGAATAGCCTGGTTTAGACAACTTTGACGCAAAATCCAATATTAGCCTCCCATTAGGGGTAAATTCAAGTCGATATCGGTCGCAGGCTTTACGGCAAGTTTTACTTTCTAAATGGTTTCGGTGGTAATTAACTATCGAACAGGCTTGTCAAATCTGTAACTCTCCACGCCTTATATTTACGACTAACGCCTTGATTGGAACTAGATCAATCAATTTTGGGTGAACAGAATAGAGTTGGTCCTGCGACTGGGACAAGCCCATTATCATTAAAACATTATGACGTCTTTCAGTTGATTTGCAGGGAGGTATGAACCTCCGCTGGGGAATTTCTAATGAGTGAGTCGAGTGTGCTGGGATGCAACCGTCACAGGTCCTTAGAATCCGCGTACAAAATTCTTGACGGATATGTCATTCTCCACTAATCCTCCAACAGAACCGTATGAAGTCGCAATTCCGTATCCGATCAGT");
            Assert.Equal(expectedResult, actualResult);
        }

        private string Transcribe(string dnaString) => dnaString.Replace("T", "U");

    }
}
